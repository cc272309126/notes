spi

二、 特点

     1. 采用主-从模式(Master-Slave) 的控制方式

       SPI 规定了两个 SPI 设备之间通信必须由主设备 (Master) 来控制次设备 (Slave). 一个 Master 设备可以通过提供 Clock 以及对 Slave 设备进行片选 (Slave Select) 来控制多个 Slave 设备, SPI 协议还规定 Slave 设备的 Clock 由 Master 设备通过 SCK 管脚提供给 Slave 设备, Slave 设备本身不能产生或控制 Clock, 没有 Clock 则 Slave 设备不能正常工作.

     2. 采用同步方式(Synchronous)传输数据

       Master 设备会根据将要交换的数据来产生相应的时钟脉冲(Clock Pulse), 时钟脉冲组成了时钟信号(Clock Signal) , 时钟信号通过时钟极性 (CPOL) 和 时钟相位 (CPHA) 控制着两个 SPI 设备间何时数据交换以及何时对接收到的数据进行采样, 来保证数据在两个设备之间是同步传输的.

     3. 数据交换(Data Exchanges)

       SPI 设备间的数据传输之所以又被称为数据交换, 是因为 SPI 协议规定一个 SPI 设备不能在数据通信过程中仅仅只充当一个 "发送者(Transmitter)" 或者 "接收者(Receiver)". 在每个 Clock 周期内, SPI 设备都会发送并接收一个 bit 大小的数据, 相当于该设备有一个 bit 大小的数据被交换了.

       一个 Slave 设备要想能够接收到 Master 发过来的控制信号, 必须在此之前能够被 Master 设备进行访问 (Access). 所以, Master 设备必须首先通过 SS/CS pin 对 Slave 设备进行片选, 把想要访问的 Slave 设备选上.

       在数据传输的过程中,  每次接收到的数据必须在下一次数据传输之前被采样. 如果之前接收到的数据没有被读取, 那么这些已经接收完成的数据将有可能会被丢弃,  导致 SPI 物理模块最终失效. 因此, 在程序中一般都会在 SPI 传输完数据后, 去读取 SPI 设备里的数据, 即使这些数据(Dummy Data)在我们的程序里是无用的.

       
接口信号

（1）MOSI – 主器件数据输出，从器件数据输入
（2）MISO – 主器件数据输入，从器件数据输出
（3）SCLK –时钟信号，由主器件产生,最大为fPCLK/2，从模式频率最大为fCPU/2
（4）NSS – 从器件使能信号，由主器件控制,有的IC会标注为CS(Chip select)
在点对点的通信中，SPI接口不需要进行寻址操作，且为全双工通信，显得简单高效。在多个从器件的系统中，每个从器件需要独立的使能信号，硬件上比I2C系统要稍微复杂一些。
SPI接口在内部硬件实际上是两个简单的移位寄存器，传输的数据为8位，在主器件产生的从器件使能信号和移位脉冲下，按位传输，高位在前，低位在后。如下图所示，在SCLK的上升沿上数据改变，同时一位数据被存入移位寄存器。

       
SPI的通信原理很简单，
它以主从方式工作，这种模式通常有一个主设备和一个或多个从设备，
需要至少4根线，事实上3根也可以（单向传输时）。也是所有基于SPI的设备共有的，
它们是SDI（数据输入），SDO（数据输出），SCK（时钟），CS（片选）。
（1）SDO     – 主设备数据输出，从设备数据输入
（2）SDI      – 主设备数据输入，从设备数据输出
（3）SCLK   – 时钟信号，由主设备产生
（4）CS        – 从设备使能信号，由主设备控制
其中CS是控制芯片是否被选中的，也就是说只有片选信号为预先规定的使能信号时（高电位或低电位），对此芯片的操作才有效。这就允许在同一总线上连接多个SPI设备成为可能。    


接下来就负责通讯的3根线了。
通讯是通过数据交换完成的，
这里先要知道SPI是串行通讯协议，也就是说数据是一位一位的传输的。
这就是SCK时钟线存在的原因，由SCK提供时钟脉冲，
SDI，SDO则基于此脉冲完成数据传输。


SCK信号线只由主设备控制，从设备不能控制信号线。
同样，在一个基于SPI的设备中，至少有一个主控设备。这样传输的特点：这样的传输方式有一个优点，与普通的串行通讯不同，普通的串行通讯一次连续传送至少8位数据，而SPI允许数据一位一位的传送，甚至允许暂停，因为SCK时钟线由主控设备控制，当没有时钟跳变时，从设备不采集或传送数据。也就是说，主设备通过对SCK时钟线的控制可以完成对通讯的控制。
SPI还是一个数据交换协议：因为SPI的数据输入和输出线独立，所以允许同时完成数据的输入和输出。


