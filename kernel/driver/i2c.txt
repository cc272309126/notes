i2c

address:

I2C协议中最重要的一点是I2C地址。这个地址有7位和10位两种形式。7位能够表示127个地址，而在实际使用中基本上不会挂载如此多的设置，所以很多设备的地址都采用7位，所以本文接下来的说明都是基于此。

除了GND以外，I2C有两根线，分别是SDA和SCL，所有的设备都是接到这两根线上。那么，这些设备如何知道数据是发送给它们呢？这就得依靠前面所说到的地址了。设备I2C的地址是固定的，比如0x50，0x60等等。因为只能有127个地址，地址冲突是很常见的，所以一般设备都会有一个地址选择PIN，比如拉高时候为0x50，接地为0x60。如果无论拉高还是接地，都和别的芯片有冲突，那该怎么办呢？答案是：凉拌，没办法。遇到这种情况，只能换芯片了。


master-slave: I2C还有一个很重要的概念，就是“主—从”。对于从设备来说，它是啥都不干的，更不会自动发送数据；而主设备，则是起到控制作用，一切都是从它开始。


SCL-SDA
SCL是时钟，SDA承载的是数据。
当SDA从1变动到0，而SCL还是1时，表示开始数据传输。接下来的7位，就是设备的地址。紧接着的是读写标志，其为1时是读取，为0则是写。如果I2C总线上存在着和请求的地址相对应的设备，则从设备会发送一个ACK信号通知主设备，可以发送数据了。接到ACK信号后，主设备则发送一个8位的数据。当传输完毕之后，SCL保持为1，SDA从0变换到1时，标明传输结束。

从这个时序图中可以看到，SCL很重要，并且哪个时钟沿是干嘛的，都是确定好的。比如，前面7个必定是地址，第8个是读写标志，数据传输必须是8位，必须接个ACK信号等等。

时序A -- 地址
时序B -- 读/写
时序C -- ACK
时序D -- 数据
时序E -- stop

I2C是由2根线进行操作的，一个是主控时序SCL，另一根主控数据SDA
对于操作主要分成读写，读写的两个操作有部分是相似的
而时序的操作主要分为：START,DATA,ACK,STOP,NOACK

下面对时序的说明：
IDLE：空闲的时候，尽量将SDA和SCL拉到高电平
START：保持SCL为高电平，然后SDA由H->L
DATA：数据是当SCL为高电平的时候采集的数据才是有效的数据.
ACK：在发完数据后，从设备会将SDA拉到L
NOACK：在发送完数据后，从设备不会将SDA拉低
STOP：保持SCL为高电平，然后SDA由L->H
 
好了，说一下时序的流程和时序图：
写时序的流程是：START –>
                      从设备的写地址 –> ACK –>
                      从设备的寄存器地址 –> ACK –>
                      写入的数据 –> ACK –>
                      STOP
 
读时序的流程是：START –>
                      从设备的写地址 –> ACK –>
                      从设备的寄存器地址 –> ACK –>
                      从设备的读地址 –> ACK ->
                      读出的数据 –> NOACK –>
                      STOP



