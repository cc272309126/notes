
GPIO 的寄存器

GPIO 的功能



GPIO功能描述
每个GPI/O端口有两个32位配置寄存器(GPIOx_CRL，GPIOx_CRH)，两个32位数据寄存器(GPIOx_IDR，GPIOx_ODR)，一个32位置位/复位寄存器(GPIOx_BSRR)，一个16位复位寄存器(GPIOx_BRR)和一个32位锁定寄存器(GPIOx_LCKR)。
 
GPIO端口的每个位可以由软件分别配置成多种模式。
─输入浮空
─输入上拉
─输入下拉
─模拟输入
─开漏输出
─推挽式输出
─推挽式复用功能
─开漏复用功能
 
每个I/O端口位可以自由编程，然而I/0端口寄存器必须按32位字被访问(不允许半字或字节访问)。GPIOx_BSRR和GPIOx_BRR寄存器允许对任何GPIO寄存器的读/更改的独立访问；这样，在读和更改访问之间产生IRQ时不会发生危险。


     General Purpose Input Output （通用输入/输出）简称为GPIO，或 总线扩展器。也就是芯片的引脚，当微控制器或芯片组没有足够的I/O端口，或当系统需要采用远端串行通信或控制时，GPIO产品能够提供额外的控制和监视功能。通常在ARM里，所有I/O都是通用的，

每个GPIO端口包含8个管脚，如PA端口是PA0～PA7,而且GPIO口至少有两个寄存器，即"通用IO控制寄存器"与"通用IO数据寄存器"。数据寄存器的各位都直接引到芯片外部，而对这种寄存器中每一位的作用，即每一位的信号流通方向，则可以通过控制寄存器中对应位独立地加以设置。比如，可以设置某个引脚的属性为输入、输出或其他特殊功能。

常用的应该是：高阻输入、推挽输出、开漏输出。

通俗理解为 ：

高阻输入—— 保持高阻抗状态，彻底断开输出，避免干扰，对总线状态不起作用，此时总线可由其他器件占用。

推挽输出——可以输出高,低电平,连接数字器件。

开漏输出——输出端相当于三极管的集电极. 要得到高电平状态需要上拉电阻才行。

软件上就是通过设置IO口的模式，然后控制IO的上拉下拉，写入对应寄存器，通过寄存器控制电路：

上拉寄存器是控制对应端口上拉使能(DE)的。当对应位为0时，设置对应引脚上拉使能，为1时，禁止对应引脚上拉使能。如果上拉寄存器使能，无论引脚功能寄存器如何设置（输入，输出，数据，中断等），对应引脚输出高电平。

上拉是一个电阻接到一个电压，其实就是增强IO的驱动能力，IO口是高电平。
下拉是一个电阻接到地，保证IO口是低电平。


